Run scan_secure.sh script every 30 seconds

In scan_secure script
	Read log or IP->Epoch Timestamp file
	If the IP attempts are greater than user-input value
		Block IP via iptables
	If the (current time - IP latest failed log in attempt) is greater than x minutes
		Unblock IP via iptables
		Set the current IP timestamp to the latest epoch time and store in a file
	If IP is already blocked
		Print already denied IP

ignore scan_secure.

ids.Py script
	looks good, may want to sort IP_list. (can use sort command)
	
firewall_ids.py
	using timestamps within x time:
		count # for each ip
		if count > y
			add to iptables
		else
			remove/make sure not in iptables
	find in list ip's without timestamps within x time
		remove from iptables
	
	
or

Calculate cutoff time
var ip
var count

for each line
	compare ip to lineip
	if not equal // perform actions on old ip var
		if count > 3
			add/confirm IP in iptables
		else
			//potentially can check vs different cutoff time for removal of block time
			//check vs current line's time stamp
			remove/confirm IP not in iptables
			
			
		//reset vars to new values
		ip = lineip
		count = 0
	
	if linetime within timelimit  //not else
		increment count
	
			
			
			
